# Generated by Django 4.2.6 on 2023-10-08 16:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=64, unique=True, verbose_name="бренд"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=64, unique=True, verbose_name="URL"),
                ),
            ],
            options={
                "verbose_name": "бренд",
                "verbose_name_plural": "бренды",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Categorry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=32, unique=True, verbose_name="название"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=32, unique=True, verbose_name="URL"),
                ),
            ],
            options={
                "verbose_name": "категория",
                "verbose_name_plural": "категории",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=5, unique=True, verbose_name="гендер"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=5, unique=True, verbose_name="URL"),
                ),
            ],
            options={
                "verbose_name": "гендер",
                "verbose_name_plural": "гендера",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="название продукта"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=128, unique=True, verbose_name="URL"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="цена"
                    ),
                ),
                ("image", models.ImageField(upload_to="", verbose_name="картинка")),
                ("description", models.TextField(verbose_name="описание")),
                (
                    "color",
                    models.TextField(
                        help_text="Вводите цвета через пробел", verbose_name="цвет"
                    ),
                ),
            ],
            options={
                "verbose_name": "товар",
                "verbose_name_plural": "товары",
                "ordering": ("title", "price", "brand"),
            },
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=4, unique=True, verbose_name="размер"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=4, unique=True, verbose_name="URL"),
                ),
            ],
            options={
                "verbose_name": "размер",
                "verbose_name_plural": "размеры",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Specification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=32, unique=True, verbose_name="спецификация"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=32, unique=True, verbose_name="URL"),
                ),
            ],
            options={
                "verbose_name": "спецификация",
                "verbose_name_plural": "спецификации",
                "ordering": ("name",),
            },
        ),
        migrations.AddConstraint(
            model_name="specification",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 2)),
                name="specification_name_length",
            ),
        ),
        migrations.AddConstraint(
            model_name="specification",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 2)),
                name="specification_slug_length",
            ),
        ),
        migrations.AddConstraint(
            model_name="size",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 1)), name="size_name_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="size",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 1)), name="size_slug_length"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shop.brand",
                verbose_name="бренд",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="size",
            field=models.ManyToManyField(to="shop.size", verbose_name="размер"),
        ),
        migrations.AddField(
            model_name="product",
            name="specification",
            field=models.ManyToManyField(
                to="shop.specification", verbose_name="спецификация"
            ),
        ),
        migrations.AddConstraint(
            model_name="gender",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 3)), name="gender_name_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="gender",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 3)), name="gender_slug_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="categorry",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 2)), name="category_name_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="categorry",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 2)), name="category_slug_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="brand",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 2)), name="brand_name_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="brand",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 2)), name="brand_slug_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                check=models.Q(("title__length__gte", 2)), name="product_name_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                check=models.Q(("slug__length__gte", 2)), name="product_slug_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                check=models.Q(("price__gt", 0)), name="product_price_length"
            ),
        ),
    ]
